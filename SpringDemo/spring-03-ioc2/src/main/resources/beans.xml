<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 第一种方式: 下标带参赋值 -->
<!--    <bean id="user" class="com.github.dairycode.spring.pojo.User">-->
<!--        <constructor-arg index="0" value="dairycode"/>-->
<!--    </bean>-->

    <!-- 第二种方式: 通过类型创建,不建议使用 -->
<!--    <bean id="user" class="com.github.dairycode.spring.pojo.User">-->
<!--        <constructor-arg type="java.lang.String" value="dairycode"/>-->
<!--    </bean>-->

    <!-- 第三种方式: 直接通过参数名创建 -->
    <bean id="user" class="com.github.dairycode.spring.pojo.User">
        <constructor-arg name="name" value="dairycode"/>
    </bean>

    <!-- 别名,如果添加了别名,我们也可以使用别名获取到这个对象 -->
    <alias name="user" alias="userNew"/>

    <!--
        id: bean的唯一标识符,也就是相当于我们学的对象名
        class: bean对象所对应的全限定名(包名 + 类型)
        name: 也是别名,而且name可以同时取多个别名
    -->
    <bean id="userT" class="com.github.dairycode.spring.pojo.UserT" name="u1 u2,u3;u4">
        <property name="name" value="dairycode"/>
    </bean>

</beans>